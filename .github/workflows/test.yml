on:
  push:
    branches:
    - main
  pull_request:
jobs:
  test:
    runs-on: ubuntu-latest
    env:
      GITEA_PORT: ${{ vars.GITEA_PORT || '3005' }}
    steps:
    - uses: actions/checkout@v4
    - name: Download Runner
      if: ${{ !vars.RUNNER_BIN }}
      shell: bash
      run: |
        go build -o "$RUNNER_TEMP/gitea-runner"
        echo "RUNNER_BIN=$RUNNER_TEMP/gitea-runner" >> $GITHUB_ENV
    - uses: ./.github/actions/setup-gitea
      with:
        gitea_bin: ${{ vars.GITEA_BIN }}
        gitea_port: ${{ env.GITEA_PORT }}
        gitea_platform: ${{ vars.GITEA_PLATFORM || 'linux-amd64' }}
    - name: Create test repository
      uses: actions/github-script@v7
      with:
        script: |
          await github.rest.repos.createForAuthenticatedUser({
            name: 'action-repo',
            private: false,
            auto_init: true,
            default_branch: 'main',
          })
          // Create new file in the repository
          await github.request("POST /repos/{owner}/{repo}/contents/{path}", {
            owner: "test01",
            repo: "action-repo",
            path: 'action.yml',
            message: 'Add action',
            branch: 'main',
            content: Buffer.from(`on: push
          runs:
            using: composite
            steps:
            - run: echo OK`).toString('base64'),
          });

          await github.rest.repos.createForAuthenticatedUser({
            name: 'test-repo',
            private: true,
            auto_init: true,
            default_branch: 'main',
          })
          // Create new file in the repository
          await github.request("POST /repos/{owner}/{repo}/contents/{path}", {
            owner: "test01",
            repo: "test-repo",
            path: '.github/workflows/test.yml',
            message: 'Add test workflow',
            branch: 'main',
            content: Buffer.from(`on: push
          jobs:
            test:
              runs-on: ubuntu-latest
              steps:
              - name: Checkout code
                uses: actions/checkout@v5
              - name: Run instance local action
                uses: test01/action-repo@main
              - name: Run tests
                run: echo "Running tests..."`).toString('base64'),
          });
          await exec.exec(`${process.env.RUNNER_BIN} register --instance http://localhost:${{ env.GITEA_PORT }} --token ${process.env.RUNNER_TOKEN} --name test-runner --labels ubuntu-latest --no-interactive --type 2`);
          await exec.exec(`${process.env.RUNNER_BIN} daemon --once`);

          await github.rest.repos.listCommitStatusesForRef({
            owner: "test01",
            repo: "test-repo",
            ref: "main"
          }).then((response) => {
            console.log(response.data);
            if (response.data.filter(status => status.status !== 'pending' && status.status != 'success').length === 0) {
              console.log('Test passed');
            } else {
              console.log('Test failed');
              throw new Error('Test failed');
            }
          });
        github-token: ${{ env.TOKEN }}
        base-url: "http://localhost:${{ env.GITEA_PORT }}/api/v1"
      env:
        RUNNER_BIN: ${{ vars.RUNNER_BIN || env.RUNNER_BIN }}
    - name: Sleep
      if: vars.SLEEP
      run: |
        sleep ${{ vars.SLEEP }}
